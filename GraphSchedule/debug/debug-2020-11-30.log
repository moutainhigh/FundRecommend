[2020-11-30 09:27:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:28:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:28:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:29:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:29:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:30:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:30:15] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 09:30:15] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22f5ef6c: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7a6b11b8: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@e1ca966: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@342eef20: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5b08d421: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2de6cc8: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@63152997: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@97278a9: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@17634fa1: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b388aff: (connection evicted)
[2020-11-30 09:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 09:45:02] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 09:45:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 09:45:04] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 09:45:04] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 09:45:04] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 09:45:04] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@5934ca1e' to the list of builder helpers.
[2020-11-30 09:45:04] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@5e9bbd9d' to the list of builder helpers.
[2020-11-30 09:45:04] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e55194a
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 09:46:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22b88a92
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5697a20e
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a40bdc3
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3db04ca
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e51b3e3
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2234a4db
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44cfc31b
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55eb12d0
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@438fa7
[2020-11-30 09:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:46:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:47:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 09:47:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 09:47:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:48:18] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:48:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 09:48:53] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 09:50:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:50:26] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 09:50:26] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7e55194a: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22b88a92: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5697a20e: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1a40bdc3: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3db04ca: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6e51b3e3: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2234a4db: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@44cfc31b: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55eb12d0: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@438fa7: (connection evicted)
[2020-11-30 09:50:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 09:50:29] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 09:50:30] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 09:50:30] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 09:50:31] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 09:50:31] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 09:50:31] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@4ef4f627' to the list of builder helpers.
[2020-11-30 09:50:31] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@79a201cf' to the list of builder helpers.
[2020-11-30 09:50:31] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 10:28:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46862781
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 10:28:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c95f185
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58b4f382
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@153f4042
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@df67835
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@583359d0
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c41e5cb
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35d07cbd
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5eb8c405
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3abbb18f
[2020-11-30 10:28:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:29:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:29:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:30:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:30:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:31:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:31:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:32:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:32:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:33:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:33:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:34:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:34:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:35:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:35:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:36:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:36:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:37:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:37:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:38:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:38:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:39:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:39:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:40:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 10:40:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:04:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:05:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:05:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:06:16] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 11:06:16] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46862781: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c95f185: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58b4f382: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@153f4042: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@df67835: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@583359d0: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1c41e5cb: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@35d07cbd: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5eb8c405: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3abbb18f: (connection evicted)
[2020-11-30 11:06:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 11:06:20] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 11:06:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 11:06:21] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 11:06:21] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 11:06:21] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 11:06:21] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@5403799b' to the list of builder helpers.
[2020-11-30 11:06:21] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@d13960e' to the list of builder helpers.
[2020-11-30 11:06:21] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@460cab88
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@713b0d61
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@547ff89
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@540eb6f3
[2020-11-30 11:10:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5058cada
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71bbb2a
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@706151bf
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@180e7722
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55e08c6
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6885cf3e
[2020-11-30 11:10:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:10:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:11:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:11:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:12:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:12:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:13:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:13:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:14:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 11:14:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:14:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 11:14:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:14:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 11:14:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:14:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 11:14:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 11:14:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:15:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:15:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:16:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:16:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:17:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:17:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:18:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:18:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:19:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:19:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:20:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:20:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:20:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:21:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:21:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:22:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:22:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:22:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:23:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:23:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:24:14] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:24:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:25:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:26:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:26:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:27:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:27:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:28:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:28:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:29:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:29:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:30:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:30:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:31:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:31:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:32:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:32:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:32:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:33:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:33:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:33:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:33:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:34:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:34:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:35:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:35:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:36:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:36:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:37:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:37:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:38:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:38:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:39:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:39:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:39:39] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@540eb6f3: (connection has passed maxLifetime)
[2020-11-30 11:39:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39654262
[2020-11-30 11:39:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:39:49] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@713b0d61: (connection has passed maxLifetime)
[2020-11-30 11:39:49] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e768c8f
[2020-11-30 11:39:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55e08c6: (connection has passed maxLifetime)
[2020-11-30 11:39:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a35034a
[2020-11-30 11:39:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@547ff89: (connection has passed maxLifetime)
[2020-11-30 11:39:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66054656
[2020-11-30 11:40:08] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@71bbb2a: (connection has passed maxLifetime)
[2020-11-30 11:40:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30b0356b
[2020-11-30 11:40:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5058cada: (connection has passed maxLifetime)
[2020-11-30 11:40:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24526785
[2020-11-30 11:40:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@460cab88: (connection has passed maxLifetime)
[2020-11-30 11:40:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@670c1694
[2020-11-30 11:40:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@706151bf: (connection has passed maxLifetime)
[2020-11-30 11:40:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@285ea6ae
[2020-11-30 11:40:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:40:17] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6885cf3e: (connection has passed maxLifetime)
[2020-11-30 11:40:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22d59edc
[2020-11-30 11:40:20] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@180e7722: (connection has passed maxLifetime)
[2020-11-30 11:40:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56fad33c
[2020-11-30 11:40:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:41:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:42:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:43:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:43:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:44:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:44:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:45:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:45:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:46:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:46:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:47:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:47:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:48:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 11:48:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 11:48:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:49:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:49:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:50:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:50:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:51:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:51:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:52:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:52:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:53:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:53:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:54:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:54:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:55:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:55:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:56:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:56:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:57:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:57:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:58:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:58:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:59:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 11:59:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 12:00:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 12:00:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 12:01:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:26:14] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:26:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:27:14] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:27:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:27:53] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 13:27:53] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@39654262: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4e768c8f: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a35034a: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@66054656: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@30b0356b: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@24526785: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@670c1694: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@285ea6ae: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22d59edc: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56fad33c: (connection evicted)
[2020-11-30 13:27:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 13:27:57] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 13:27:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 13:27:58] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 13:27:58] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 13:27:58] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 13:27:58] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@2921199d' to the list of builder helpers.
[2020-11-30 13:27:58] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@78307a56' to the list of builder helpers.
[2020-11-30 13:27:58] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 13:33:00] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d4beb39
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 13:33:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8150596
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c10a775
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2be52ce5
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2976ac36
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b8481a8
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b057ab0
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38a5b5bf
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12764b1b
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6dcb5be5
[2020-11-30 13:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:33:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:34:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:36:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 13:36:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:36:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 13:36:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 50(Integer), 50(Integer)
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 0
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 50(Integer)
[2020-11-30 13:36:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 19
[2020-11-30 13:36:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:37:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:37:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:38:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:38:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:38:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:39:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:39:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:40:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:40:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:41:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:41:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:41:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:42:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:43:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:43:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:43:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:44:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:44:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:45:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:45:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:45:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:46:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:46:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:46:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:46:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:47:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer)
[2020-11-30 13:47:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer), 10(Integer)
[2020-11-30 13:47:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 1(String)
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 1(String), 10(Integer), 10(Integer)
[2020-11-30 13:47:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 0
[2020-11-30 13:47:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer), 10(Integer)
[2020-11-30 13:47:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer), 10(Integer)
[2020-11-30 13:47:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer)
[2020-11-30 13:47:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer), 10(Integer)
[2020-11-30 13:47:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer)
[2020-11-30 13:47:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 1(String)
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 1(String), 10(Integer)
[2020-11-30 13:47:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 6
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 13:47:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 13:47:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 13:48:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 1(String)
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 1(String), 10(Integer), 10(Integer)
[2020-11-30 13:48:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 0
[2020-11-30 14:11:25] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:11:25] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d4beb39: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8150596: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7c10a775: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2be52ce5: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2976ac36: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6b8481a8: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@b057ab0: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@38a5b5bf: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@12764b1b: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6dcb5be5: (connection evicted)
[2020-11-30 14:11:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:11:28] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:11:29] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:11:29] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:11:30] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:11:30] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:11:30] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@2b08772d' to the list of builder helpers.
[2020-11-30 14:11:30] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@159424e2' to the list of builder helpers.
[2020-11-30 14:11:30] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:11:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d4beb39
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46804d9f
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32cb2d63
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6bb2b571
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@67e3ab60
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8c72ff
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66a69740
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23fe5469
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9f1a6ea
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@682fd55f
[2020-11-30 14:11:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:11:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:12:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:12:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:13:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:13:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:14:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:14:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:14:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer)
[2020-11-30 14:15:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 0(String)
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ?, ? 
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 0(String), 10(Integer), 10(Integer)
[2020-11-30 14:15:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_type = ? 
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 1(String)
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 1(String), 10(Integer)
[2020-11-30 14:15:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 6
[2020-11-30 14:15:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? 
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String)
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_name like CONCAT("%",?,"%") and algorithm_type = ? order by create_time desc LIMIT ? 
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 算法2(String), 1(String), 10(Integer)
[2020-11-30 14:15:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 1
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? AND creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String), ad(String)
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_name like CONCAT("%",?,"%") and algorithm_type = ? and creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 算法2(String), 1(String), ad(String), 10(Integer)
[2020-11-30 14:15:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 1
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? AND creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String), ad(String)
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_name like CONCAT("%",?,"%") and algorithm_type = ? and creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 算法2(String), 1(String), ad(String), 10(Integer)
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 1
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? AND creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String), ad(String)
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE algorithm_name like CONCAT("%",?,"%") and algorithm_type = ? and creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 算法2(String), 1(String), ad(String), 10(Integer)
[2020-11-30 14:15:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 1
[2020-11-30 14:15:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? AND creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:15:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String), ad2(String)
[2020-11-30 14:15:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE algorithm_name LIKE CONCAT("%", ?, "%") AND algorithm_type = ? AND creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:15:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 算法2(String), 1(String), ad2(String)
[2020-11-30 14:15:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:15:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:16:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:16:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:17:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:17:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:18:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:18:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:18:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:21:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:21:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:22:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:22:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:23:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:23:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:24:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:24:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:24:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:25:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:25:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:26:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:26:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:27:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:27:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:28:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:28:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:29:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:29:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:30:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:30:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:31:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:32:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:32:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:33:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:33:23] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:33:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:34:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:34:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:35:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:35:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:35:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:36:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:36:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:36:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:37:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:37:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:38:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:38:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:38:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:38:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:39:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:39:29] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:39:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:40:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:40:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:41:06] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:41:06] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d4beb39: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46804d9f: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@32cb2d63: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6bb2b571: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@67e3ab60: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8c72ff: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@66a69740: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@23fe5469: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9f1a6ea: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@682fd55f: (connection evicted)
[2020-11-30 14:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:41:10] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:41:11] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:41:11] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:41:12] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:41:12] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:41:12] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@22da2fe6' to the list of builder helpers.
[2020-11-30 14:41:12] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@11787b64' to the list of builder helpers.
[2020-11-30 14:41:12] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3abc246c
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:41:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2161cc2a
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55cdb64a
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32aaffe1
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d1c8
[2020-11-30 14:41:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55414516
[2020-11-30 14:41:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@405cf993
[2020-11-30 14:41:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57505b2a
[2020-11-30 14:41:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@374b6970
[2020-11-30 14:41:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25d5880c
[2020-11-30 14:41:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:41:16] -- [DEBUG]: [io.sentry.event.EventBuilder$HostnameCache] -- Updating the hostname cache
[2020-11-30 14:41:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:41:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:42:01] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:42:01] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3abc246c: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2161cc2a: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55cdb64a: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@32aaffe1: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2d1c8: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55414516: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@405cf993: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@57505b2a: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@374b6970: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@25d5880c: (connection evicted)
[2020-11-30 14:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:42:05] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:42:06] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:42:06] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:42:06] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:42:06] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:42:06] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@59c500f7' to the list of builder helpers.
[2020-11-30 14:42:06] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@6661d8c0' to the list of builder helpers.
[2020-11-30 14:42:06] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3242cb4f
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 14:42:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:42:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7971839a
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d053ab7
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@574e6c0b
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58124562
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7277997c
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a1663c2
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6219e11a
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@365ab057
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1daa659f
[2020-11-30 14:42:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:42:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:43:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:43:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:44:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:44:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:45:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:45:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:46:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:46:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:49:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:49:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:49:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:50:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:50:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:50:41] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:50:41] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3242cb4f: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7971839a: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@d053ab7: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@574e6c0b: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58124562: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7277997c: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6a1663c2: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6219e11a: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@365ab057: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1daa659f: (connection evicted)
[2020-11-30 14:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:50:44] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:50:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:50:46] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:50:46] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:50:46] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:50:46] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@59a2388e' to the list of builder helpers.
[2020-11-30 14:50:46] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@6518fdfd' to the list of builder helpers.
[2020-11-30 14:50:46] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@16602675
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6da754c
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72d11fc1
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42f3fb06
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@27b9dbfa
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4fa1549d
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e0109bc
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@187625da
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30c89668
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74ce251e
[2020-11-30 14:50:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=1, idle=9, waiting=0)
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 3(Integer)
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:50:56] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:50:58] -- [DEBUG]: [io.sentry.event.EventBuilder$HostnameCache] -- Updating the hostname cache
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 3(Integer)
[2020-11-30 14:51:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 14:51:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:51:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:51:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:51:53] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:51:53] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@16602675: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6da754c: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72d11fc1: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@42f3fb06: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@27b9dbfa: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4fa1549d: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@e0109bc: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@187625da: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@30c89668: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@74ce251e: (connection evicted)
[2020-11-30 14:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:51:55] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:51:56] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:51:56] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:51:57] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:51:57] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:51:57] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@6661d8c0' to the list of builder helpers.
[2020-11-30 14:51:57] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@315c081' to the list of builder helpers.
[2020-11-30 14:51:57] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@651c3cf2
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@216705cc
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@554be963
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f67b14f
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48828
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@711244a1
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21d1e759
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@245ea622
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@195c5a24
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@459dccc
[2020-11-30 14:52:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=1, idle=9, waiting=0)
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 3(Integer)
[2020-11-30 14:52:03] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 14:52:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 10(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 8
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 14:52:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 16(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 8
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 14:52:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo WHERE creater LIKE CONCAT("%", ?, "%") 
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: admin(String)
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo WHERE creater like CONCAT("%",?,"%") order by create_time desc LIMIT ?, ? 
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: admin(String), 16(Integer), 16(Integer)
[2020-11-30 14:53:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 0
[2020-11-30 14:53:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 16(Integer), 16(Integer)
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 3
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 14:53:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 16(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 16
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factor_column from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 14:53:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:54:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:54:51] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:54:51] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@651c3cf2: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@216705cc: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@554be963: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f67b14f: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@48828: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@711244a1: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21d1e759: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@245ea622: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@195c5a24: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@459dccc: (connection evicted)
[2020-11-30 14:54:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:54:53] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:54:54] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:54:54] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:54:55] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:54:55] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:54:55] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@19e21f89' to the list of builder helpers.
[2020-11-30 14:54:55] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@776015fc' to the list of builder helpers.
[2020-11-30 14:54:55] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:54:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41ef7bfb
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5e6e06c8
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2abd0b84
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@179bd41
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f0d73d4
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@467cca58
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@625131cd
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c8cdcef
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68eb6538
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34bb9663
[2020-11-30 14:54:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=1, idle=9, waiting=0)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 16(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 16
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 14:54:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:19] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 14:55:19] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41ef7bfb: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5e6e06c8: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2abd0b84: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@179bd41: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7f0d73d4: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@467cca58: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@625131cd: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1c8cdcef: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@68eb6538: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@34bb9663: (connection evicted)
[2020-11-30 14:55:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 14:55:22] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 14:55:23] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 14:55:23] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 14:55:23] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 14:55:23] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 14:55:23] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@25c2a9e3' to the list of builder helpers.
[2020-11-30 14:55:23] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@5a515e5d' to the list of builder helpers.
[2020-11-30 14:55:23] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 14:55:35] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13831e6f
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@351f7e62
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 14:55:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41a77459
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ea86567
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@147c6579
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@98430f1
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c7906a4
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e730488
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5484a47f
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7baa8d09
[2020-11-30 14:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:56:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:56:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 14:57:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:57:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 14:57:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 14:58:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:58:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:59:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 14:59:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:03:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:04:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:04:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:04:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:05:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:05:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:06:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:06:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:06:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:05] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:07:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:07:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:08:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:08:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:08:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:09:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:09:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:10:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:10:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:11:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:11:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:11:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:12:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:12:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:12:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:13:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:13:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:14:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:14:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:15:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:15:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:16:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:16:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:16:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:17:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:17:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:18:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:18:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:19:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:19:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 15:20:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:20:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:20:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:21:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:21:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:22:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:22:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:23:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:23:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:23:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:24:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:24:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:24:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:25:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:25:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:25:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:26:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:26:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:27:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:27:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:28:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:28:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:28:43] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4ea86567: (connection has passed maxLifetime)
[2020-11-30 15:28:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c67b794
[2020-11-30 15:28:45] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13831e6f: (connection has passed maxLifetime)
[2020-11-30 15:28:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78e6e329
[2020-11-30 15:28:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@351f7e62: (connection has passed maxLifetime)
[2020-11-30 15:28:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@351968a7
[2020-11-30 15:28:53] -- [DEBUG]: [io.sentry.event.EventBuilder$HostnameCache] -- Updating the hostname cache
[2020-11-30 15:28:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:28:54] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@41a77459: (connection has passed maxLifetime)
[2020-11-30 15:28:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ac1fcec
[2020-11-30 15:28:55] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7baa8d09: (connection has passed maxLifetime)
[2020-11-30 15:28:55] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e561a68
[2020-11-30 15:28:56] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4c7906a4: (connection has passed maxLifetime)
[2020-11-30 15:28:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@60e1a727
[2020-11-30 15:28:57] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@98430f1: (connection has passed maxLifetime)
[2020-11-30 15:28:57] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3be8278d
[2020-11-30 15:29:02] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1e730488: (connection has passed maxLifetime)
[2020-11-30 15:29:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40731e30
[2020-11-30 15:29:02] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5484a47f: (connection has passed maxLifetime)
[2020-11-30 15:29:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d4516b8
[2020-11-30 15:29:18] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@147c6579: (connection has passed maxLifetime)
[2020-11-30 15:29:18] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6af5a1aa
[2020-11-30 15:29:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:29:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:29:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:30:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:30:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:30:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:31:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:31:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:31:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:32:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:32:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:33:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:33:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:49] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:34:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:34:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:35:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:35:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:36:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:36:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:37:07] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:37:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:37:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:38:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:38:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:39:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:39:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:40:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:40:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:41:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:41:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:42:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:42:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:43:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:43:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:44:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:44:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:45:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:45:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:45:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:46:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:46:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:47:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:47:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:48:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:48:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:48:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:49:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:49:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:50:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:50:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:51:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:51:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:52:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:52:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:53:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:53:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:54:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:54:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:55:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:55:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:55:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:56:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:56:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:56:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 15:57:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 15:57:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:58:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@60e1a727: (connection has passed maxLifetime)
[2020-11-30 15:58:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13f0588f
[2020-11-30 15:58:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:58:30] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@c67b794: (connection has passed maxLifetime)
[2020-11-30 15:58:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68f9fc5
[2020-11-30 15:58:34] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@78e6e329: (connection has passed maxLifetime)
[2020-11-30 15:58:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7284b0ed
[2020-11-30 15:58:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3be8278d: (connection has passed maxLifetime)
[2020-11-30 15:58:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b4e1d23
[2020-11-30 15:58:46] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1d4516b8: (connection has passed maxLifetime)
[2020-11-30 15:58:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f78c9f0
[2020-11-30 15:58:46] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@351968a7: (connection has passed maxLifetime)
[2020-11-30 15:58:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@318c1956
[2020-11-30 15:58:49] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ac1fcec: (connection has passed maxLifetime)
[2020-11-30 15:58:49] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a2d91bb
[2020-11-30 15:58:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6af5a1aa: (connection has passed maxLifetime)
[2020-11-30 15:58:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79ee1ef6
[2020-11-30 15:58:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6e561a68: (connection has passed maxLifetime)
[2020-11-30 15:58:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@199839fc
[2020-11-30 15:58:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:59:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@40731e30: (connection has passed maxLifetime)
[2020-11-30 15:59:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40f5ffe2
[2020-11-30 15:59:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 15:59:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:00:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:00:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:01:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:01:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:02:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:02:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:03:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:03:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:04:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:04:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:05:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:05:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:05:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 16:06:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:06:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:07:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:07:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:08:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:08:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:08:51] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:08:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:09:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:09:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:10:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:10] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:11:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:12:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:12:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:13:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:13:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 16:14:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:14:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:14:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:15:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:15:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:16:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:16:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:17:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:17:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:18:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:18:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:19:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:19:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:20:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:20:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:21:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:21:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:22:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:22:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:23:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:23:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:23:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:24:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:24:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:24:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:25:02] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:25:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:25:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:26:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:26:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:27:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:27:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:27:57] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7284b0ed: (connection has passed maxLifetime)
[2020-11-30 16:27:57] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@26aac09b
[2020-11-30 16:28:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13f0588f: (connection has passed maxLifetime)
[2020-11-30 16:28:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7977b7bc
[2020-11-30 16:28:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@68f9fc5: (connection has passed maxLifetime)
[2020-11-30 16:28:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c4cc0aa
[2020-11-30 16:28:21] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f78c9f0: (connection has passed maxLifetime)
[2020-11-30 16:28:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58ed9346
[2020-11-30 16:28:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b4e1d23: (connection has passed maxLifetime)
[2020-11-30 16:28:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dac9344
[2020-11-30 16:28:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:28:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@318c1956: (connection has passed maxLifetime)
[2020-11-30 16:28:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d2fd9c0
[2020-11-30 16:28:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@79ee1ef6: (connection has passed maxLifetime)
[2020-11-30 16:28:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d644b7d
[2020-11-30 16:28:30] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@199839fc: (connection has passed maxLifetime)
[2020-11-30 16:28:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7eb1c8fe
[2020-11-30 16:28:46] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@40f5ffe2: (connection has passed maxLifetime)
[2020-11-30 16:28:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c0be61f
[2020-11-30 16:28:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1a2d91bb: (connection has passed maxLifetime)
[2020-11-30 16:28:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@483a709a
[2020-11-30 16:28:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:29:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:29:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:30:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:30:26] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 16:30:26] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@26aac09b: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7977b7bc: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c4cc0aa: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58ed9346: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5dac9344: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@d2fd9c0: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d644b7d: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7eb1c8fe: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3c0be61f: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@483a709a: (connection evicted)
[2020-11-30 16:30:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 16:30:32] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 16:30:33] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 16:30:33] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 16:30:34] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 16:30:34] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 16:30:34] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@1de4bee0' to the list of builder helpers.
[2020-11-30 16:30:34] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@262a1fad' to the list of builder helpers.
[2020-11-30 16:30:34] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 16:30:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65d96372
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@18680dee
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c7dd86f
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ce2d7eb
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@390ba634
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45aeeff5
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@414d5166
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@243c4590
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23cb0203
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13cd321e
[2020-11-30 16:30:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=1, idle=9, waiting=0)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 16(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 16
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 16:30:42] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:30:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:31:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:31:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:32:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:32:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:32:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:33:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:33:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:34:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:34:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:35:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:35:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:35:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:36:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:36:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:37:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:37:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:38:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:38:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:39:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:39:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:40:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:40:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:40:52] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:41:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:41:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:42:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:42:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:43:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:43:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:44:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:44:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:45:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:45:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:45:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:46:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:46:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:47:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:47:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:48:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:48:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:49:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:49:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:50:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:50:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:51:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:51:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:51:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:52:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:52:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:53:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:53:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:53:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:54:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:54:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:55:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:55:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:44] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:56:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:57:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:57:24] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 16:57:24] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65d96372: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@18680dee: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6c7dd86f: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@ce2d7eb: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@390ba634: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@45aeeff5: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@414d5166: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@243c4590: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@23cb0203: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13cd321e: (connection evicted)
[2020-11-30 16:57:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 16:57:29] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 16:57:30] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 16:57:30] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 16:57:30] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 16:57:30] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 16:57:30] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@52d3fafd' to the list of builder helpers.
[2020-11-30 16:57:30] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@523a7801' to the list of builder helpers.
[2020-11-30 16:57:30] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d9c3508
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1bb19749
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f2710e8
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@121956ca
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3ad2af29
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f68e118
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b220f19
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@311a272e
[2020-11-30 16:58:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@331de5be
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@696dc168
[2020-11-30 16:58:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:58:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:58:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:59:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 16:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 16:59:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:00:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:00:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:00:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:01:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:01:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:01:48] -- [DEBUG]: [io.sentry.event.EventBuilder$HostnameCache] -- Updating the hostname cache
[2020-11-30 17:02:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:02:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:03:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:03:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:03:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:04:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:04:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:05:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:05:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:06:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:06:38] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 17:06:38] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3d9c3508: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1bb19749: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6f2710e8: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@121956ca: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3ad2af29: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f68e118: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2b220f19: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@311a272e: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@331de5be: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@696dc168: (connection evicted)
[2020-11-30 17:06:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 17:06:41] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 17:06:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 17:06:42] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 17:06:43] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 17:06:43] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 17:06:43] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@3421debd' to the list of builder helpers.
[2020-11-30 17:06:43] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@4a070cf0' to the list of builder helpers.
[2020-11-30 17:06:43] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 17:08:14] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 17:08:14] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 17:08:17] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 17:08:18] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 17:08:18] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 17:08:19] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 17:08:19] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 17:08:19] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@552cede7' to the list of builder helpers.
[2020-11-30 17:08:19] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@40ed1802' to the list of builder helpers.
[2020-11-30 17:08:19] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 17:08:20] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 17:08:20] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 17:08:23] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 17:08:24] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 17:08:24] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 17:08:25] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 17:08:25] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 17:08:25] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@7634f2b' to the list of builder helpers.
[2020-11-30 17:08:25] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@52bd9a27' to the list of builder helpers.
[2020-11-30 17:08:25] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f2e51a4
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3cbf463f
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@480ee4a8
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:08:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12c1cbe0
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ddc5db8
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4746b04
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4451c336
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58fa9ff3
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4da7643d
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23c5e08e
[2020-11-30 17:08:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:09:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:09:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:10:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:10:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:11:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:11:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:12:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:12:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:13:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:13:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:13:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:14:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:14:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:15:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:15:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:16:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:16:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:17:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:17:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:18:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:18:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:19:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:19:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:19:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:20:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:20:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:21:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:21:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:22:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:22:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:22:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:23:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:23:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:24:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:24:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:25:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:25:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:26:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:26:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:27:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:27:20] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 17:27:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:28:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:28:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:29:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:29:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:30:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:30:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:31:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:31:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:32:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:32:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:33:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:36:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:37:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:37:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:37:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@12c1cbe0: (connection has passed maxLifetime)
[2020-11-30 17:37:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b7d1c0f
[2020-11-30 17:38:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:38:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@480ee4a8: (connection has passed maxLifetime)
[2020-11-30 17:38:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@540fc7f2
[2020-11-30 17:38:09] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4746b04: (connection has passed maxLifetime)
[2020-11-30 17:38:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@20563052
[2020-11-30 17:38:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3cbf463f: (connection has passed maxLifetime)
[2020-11-30 17:38:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6836015a
[2020-11-30 17:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4451c336: (connection has passed maxLifetime)
[2020-11-30 17:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@756c21cb
[2020-11-30 17:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ddc5db8: (connection has passed maxLifetime)
[2020-11-30 17:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c93a786
[2020-11-30 17:38:17] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4da7643d: (connection has passed maxLifetime)
[2020-11-30 17:38:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@240eaf41
[2020-11-30 17:38:22] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@58fa9ff3: (connection has passed maxLifetime)
[2020-11-30 17:38:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@50a7b788
[2020-11-30 17:38:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@23c5e08e: (connection has passed maxLifetime)
[2020-11-30 17:38:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65936c45
[2020-11-30 17:38:28] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7f2e51a4: (connection has passed maxLifetime)
[2020-11-30 17:38:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56db769
[2020-11-30 17:38:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:39:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:45] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:39:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:40:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:41:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:41:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:41:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:42:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:43:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:43:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:43:48] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-11-30 17:43:48] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b7d1c0f: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@540fc7f2: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@20563052: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6836015a: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@756c21cb: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2c93a786: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@240eaf41: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@50a7b788: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65936c45: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56db769: (connection evicted)
[2020-11-30 17:43:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-11-30 17:43:53] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-11-30 17:43:54] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-11-30 17:43:54] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-11-30 17:43:54] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-11-30 17:43:54] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-11-30 17:43:54] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@8f40022' to the list of builder helpers.
[2020-11-30 17:43:54] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@2ad99cf3' to the list of builder helpers.
[2020-11-30 17:43:54] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@520a837e
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65fa1b3
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72544e7f
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@224ecd6f
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@273c0f90
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:43:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@140390bb
[2020-11-30 17:43:59] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@594ded13
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f3bda50
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:44:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:44:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a254fe7
[2020-11-30 17:44:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c1fd070
[2020-11-30 17:44:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:44:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:44:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:45:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:45:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:45:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-11-30 17:46:13] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:46:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:47:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:47:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:48:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:48:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:49:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:49:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:49:50] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:50:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:50:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:51:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:51:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:52:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:52:24] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:52:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:53:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:53:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:54:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:54:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:55:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:55:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:55:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:56:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:56:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:57:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:57:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:58:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:58:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:58:46] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:59:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 17:59:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:00:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:00:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:01:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:01:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:02:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:02:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:03:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:03:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:04:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:04:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:05:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:05:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:06:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:06:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:07:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:07:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:08:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:08:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:08:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:09:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:09:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:09:36] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:10:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:10:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:11:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:11:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:12:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:12:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:13:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:13:23] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72544e7f: (connection has passed maxLifetime)
[2020-11-30 18:13:23] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d2a57e8
[2020-11-30 18:13:28] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@273c0f90: (connection has passed maxLifetime)
[2020-11-30 18:13:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b74f486
[2020-11-30 18:13:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:13:30] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f3bda50: (connection has passed maxLifetime)
[2020-11-30 18:13:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f420299
[2020-11-30 18:13:34] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@520a837e: (connection has passed maxLifetime)
[2020-11-30 18:13:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34d7c365
[2020-11-30 18:13:35] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65fa1b3: (connection has passed maxLifetime)
[2020-11-30 18:13:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a17783b
[2020-11-30 18:13:39] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3c1fd070: (connection has passed maxLifetime)
[2020-11-30 18:13:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@161e6daf
[2020-11-30 18:13:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@140390bb: (connection has passed maxLifetime)
[2020-11-30 18:13:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31a7b68f
[2020-11-30 18:13:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@224ecd6f: (connection has passed maxLifetime)
[2020-11-30 18:13:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@459b884b
[2020-11-30 18:13:51] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@594ded13: (connection has passed maxLifetime)
[2020-11-30 18:13:51] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@204282bd
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:13:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:13:56] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a254fe7: (connection has passed maxLifetime)
[2020-11-30 18:13:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10c439a3
[2020-11-30 18:14:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:14:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:15:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:15:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:15:47] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:16:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:16:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:17:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:17:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:18:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:18:55] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:19:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-11-30 18:19:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-11-30 18:57:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 18:57:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 19:37:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 19:38:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 21:10:40] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 21:50:23] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 21:50:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 21:51:23] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 21:51:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 23:32:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 23:33:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-11-30 23:33:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)

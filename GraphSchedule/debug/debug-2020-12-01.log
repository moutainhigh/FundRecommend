[2020-12-01 03:07:37] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 03:08:07] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:15:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:15:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:16:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:16:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:17:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:17:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:18:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:18:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:19:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:19:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:20:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:20:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:21:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:21:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:22:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:22:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:23:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:23:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:24:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:24:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:25:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:25:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:26:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:26:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:27:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:27:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:28:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:28:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:29:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:29:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:30:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:30:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:31:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:31:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:31:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b74f486: (connection has passed maxLifetime)
[2020-12-01 09:31:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b842ff9
[2020-12-01 09:32:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@161e6daf: (connection has passed maxLifetime)
[2020-12-01 09:32:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d82cd07
[2020-12-01 09:32:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:32:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@34d7c365: (connection has passed maxLifetime)
[2020-12-01 09:32:07] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@497779dc
[2020-12-01 09:32:09] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@d2a57e8: (connection has passed maxLifetime)
[2020-12-01 09:32:09] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3db3600d
[2020-12-01 09:32:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1a17783b: (connection has passed maxLifetime)
[2020-12-01 09:32:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65ec4688
[2020-12-01 09:32:23] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@204282bd: (connection has passed maxLifetime)
[2020-12-01 09:32:23] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b1f35d5
[2020-12-01 09:32:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f420299: (connection has passed maxLifetime)
[2020-12-01 09:32:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f59de65
[2020-12-01 09:32:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:32:40] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@31a7b68f: (connection has passed maxLifetime)
[2020-12-01 09:32:40] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1327a6a3
[2020-12-01 09:32:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@459b884b: (connection has passed maxLifetime)
[2020-12-01 09:32:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@117679e3
[2020-12-01 09:32:58] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@10c439a3: (connection has passed maxLifetime)
[2020-12-01 09:32:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@62c41ab8
[2020-12-01 09:33:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:33:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:34:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:34:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:35:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:35:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:36:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:36:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:37:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:37:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:37:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:38:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:38:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:39:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:39:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:40:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:40:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:40:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:41:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:41:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:41:37] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:41:48] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:42:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:42:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:43:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:43:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:44:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:44:09] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:44:31] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:44:33] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:44:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:45:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:45:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:46:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:46:14] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:46:21] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:46:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:47:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:47:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:48:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:48:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:48:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:49:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:49:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:50:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:50:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:51:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:51:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:51:57] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:52:11] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:52:15] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:52:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:52:26] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:52:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:53:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:53:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:54:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:54:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:55:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 09:55:16] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:55:35] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:36] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:55:43] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:55:47] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-12-01 09:55:47] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@b842ff9: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3d82cd07: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@497779dc: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3db3600d: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65ec4688: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4b1f35d5: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3f59de65: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1327a6a3: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@117679e3: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@62c41ab8: (connection evicted)
[2020-12-01 09:55:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-12-01 09:55:52] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-12-01 09:55:53] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-12-01 09:55:53] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-12-01 09:55:53] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-12-01 09:55:53] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-12-01 09:55:53] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@5382184b' to the list of builder helpers.
[2020-12-01 09:55:53] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@6f25bf88' to the list of builder helpers.
[2020-12-01 09:55:53] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13dd3577
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23be583f
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57907757
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a183bff
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ddd741
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6cac60dc
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66f9a206
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:59:08] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40b56b54
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@747a1c07
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@39509b47
[2020-12-01 09:59:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 09:59:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 09:59:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:00:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:01:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:01:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:01:42] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-12-01 10:01:42] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13dd3577: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@23be583f: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@57907757: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a183bff: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2ddd741: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6cac60dc: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@66f9a206: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@40b56b54: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@747a1c07: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@39509b47: (connection evicted)
[2020-12-01 10:01:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-12-01 10:02:50] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-12-01 10:02:51] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-12-01 10:02:51] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-12-01 10:02:52] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-12-01 10:02:52] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-12-01 10:02:52] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@611e5819' to the list of builder helpers.
[2020-12-01 10:02:52] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@5ed5b321' to the list of builder helpers.
[2020-12-01 10:02:52] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14d63fca
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3badc229
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:02:58] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f9bf5da
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1df94fe0
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ace4e4e
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10052b1c
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@203d0d96
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ed8ad9f
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33c6fdef
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10b2caf1
[2020-12-01 10:02:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:03:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:03:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:03:27] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:03:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:05:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:06:01] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-12-01 10:06:01] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14d63fca: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3badc229: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f9bf5da: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1df94fe0: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ace4e4e: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@10052b1c: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@203d0d96: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6ed8ad9f: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@33c6fdef: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@10b2caf1: (connection evicted)
[2020-12-01 10:06:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-12-01 10:06:04] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-12-01 10:06:05] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-12-01 10:06:05] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-12-01 10:06:06] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-12-01 10:06:06] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-12-01 10:06:06] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@2213639b' to the list of builder helpers.
[2020-12-01 10:06:06] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@7b5cc918' to the list of builder helpers.
[2020-12-01 10:06:06] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-12-01 10:06:16] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@560b744b
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:06:17] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@229d0bb
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@76265dee
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68b84460
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@234a7a70
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a3e97f6
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@161e0dd
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1db31a05
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b1f46ab
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46b72d5c
[2020-12-01 10:06:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:06:22] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:09:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:09:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:10:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:10:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:11:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:11:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:12:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:12:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:13:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:13:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:14:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:14:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:15:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:15:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:16:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:16:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:17:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:17:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:18:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:18:32] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Gracefully shutting down Sentry async threads.
[2020-12-01 10:18:32] -- [DEBUG]: [io.sentry.connection.AsyncConnection] -- Shutdown finished.
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@560b744b: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@229d0bb: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@76265dee: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@68b84460: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@234a7a70: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a3e97f6: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@161e0dd: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1db31a05: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4b1f46ab: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46b72d5c: (connection evicted)
[2020-12-01 10:18:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2020-12-01 10:18:37] -- [DEBUG]: [com.dfund.recom.algo.AlgoApplication] -- Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
[2020-12-01 10:18:38] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
[2020-12-01 10:18:38] -- [DEBUG]: [org.apache.ibatis.logging.LogFactory] -- Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[2020-12-01 10:18:38] -- [DEBUG]: [io.sentry.config.Lookup] -- Sentry configuration file not found in filesystem or classpath: 'sentry.properties'.
[2020-12-01 10:18:38] -- [DEBUG]: [io.sentry.DefaultSentryClientFactory] -- Using an HTTPS connection to Sentry.
[2020-12-01 10:18:38] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.HttpEventBuilderHelper@5a622fe8' to the list of builder helpers.
[2020-12-01 10:18:38] -- [DEBUG]: [io.sentry.SentryClient] -- Adding 'io.sentry.event.helper.ContextBuilderHelper@a0bf272' to the list of builder helpers.
[2020-12-01 10:18:38] -- [DEBUG]: [io.sentry.SentryClientFactory] -- Configuring uncaught exception handler.
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension.............false
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit......................true
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog.........................none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql...............none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery.............none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout...............30000
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource......................none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName.............none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI..................none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties............{password=<masked>}
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................."com.mysql.cj.jdbc.Driver"
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties...........{}
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry.............none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout.....................600000
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout.......1
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries..........false
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl.........................jdbc:mysql://localhost:3306/cos?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnet=true&allowPublicKeyRetrieval=true
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold..........0
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime.....................1800000
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize.................10
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry..................none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory...........none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle.....................10
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password........................<masked>
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName........................"HikariPool-1"
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly........................false
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans..................false
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor...............none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema..........................none
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory...................internal
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation............default
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username........................"root"
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout...............5000
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14d63fca
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44cbc3c6
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@300272be
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52e4dcaf
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@65a8b733
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f276154
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72d5f46
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37cab92b
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:19:41] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72b4cf50
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46fe907b
[2020-12-01 10:19:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:20:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:20:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:21:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:21:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:22:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:22:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:23:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:23:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:23:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:24:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:24:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:25:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:25:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:26:04] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:26:06] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:26:18] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:26:19] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:26:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:27:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:27:32] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:27:34] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:27:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:27:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:27:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:28:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:28:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:29:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:29:38] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:29:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:30:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:30:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:30:54] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:31:00] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:31:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:31:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:32:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:32:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:33:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:33:39] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:33:40] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:33:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:34:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:34:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:35:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:35:25] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:35:28] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:35:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:36:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:36:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:37:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:37:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:38:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:39:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ?, ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer), 10(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 9
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 9(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 4
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 8(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 7(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 6(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 5(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 4(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 3(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 2(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 1(Integer)
[2020-12-01 10:39:30] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:39:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:40:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:40:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:41:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:41:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==>  Preparing: SELECT count(0) FROM algorithm_baseinfo 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- ==> Parameters: 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition_COUNT] -- <==      Total: 1
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==>  Preparing: select algorithm_id as algorithmId,algorithm_name as algorithmName,algorithm_vision as algorithmVision, algorithm_type as algorithmType,apply_client_scope as applyClientScope,creater as creater, create_Time as createTime,algorithm_description as algorithmDescription,algorithm_state as algorithmState, python_url as pythonUrl,pythonfile as pythonfile from algorithm_baseinfo order by create_time desc LIMIT ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- ==> Parameters: 10(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.AlgoMapper.selectAlgoByCondition] -- <==      Total: 10
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 21(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 18(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 17(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 16(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 15(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 14(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 13(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 12(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 11(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==>  Preparing: select algorithm_id as algorithmId,factor_id as factorId,factor_name as factorName,factor_type as factorType, factor_table as factorTable,factor_column as factorColumn,init_date as initDate from algorithm_factor where algorithm_id = ? 
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- ==> Parameters: 10(Integer)
[2020-12-01 10:42:01] -- [DEBUG]: [com.dfund.recom.algo.mapper.FactorMapper.selectByAlgoId] -- <==      Total: 0
[2020-12-01 10:42:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:42:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:43:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:43:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:44:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:44:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:45:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:45:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:46:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:46:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:47:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:47:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:48:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:48:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:49:05] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@65a8b733: (connection has passed maxLifetime)
[2020-12-01 10:49:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@364f7f73
[2020-12-01 10:49:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@52e4dcaf: (connection has passed maxLifetime)
[2020-12-01 10:49:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42f43663
[2020-12-01 10:49:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72b4cf50: (connection has passed maxLifetime)
[2020-12-01 10:49:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1329f367
[2020-12-01 10:49:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:49:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72d5f46: (connection has passed maxLifetime)
[2020-12-01 10:49:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55587155
[2020-12-01 10:49:18] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46fe907b: (connection has passed maxLifetime)
[2020-12-01 10:49:18] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2180502e
[2020-12-01 10:49:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14d63fca: (connection has passed maxLifetime)
[2020-12-01 10:49:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f5eef90
[2020-12-01 10:49:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1f276154: (connection has passed maxLifetime)
[2020-12-01 10:49:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c9010fc
[2020-12-01 10:49:28] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@300272be: (connection has passed maxLifetime)
[2020-12-01 10:49:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75e4f39
[2020-12-01 10:49:31] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@44cbc3c6: (connection has passed maxLifetime)
[2020-12-01 10:49:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44e1942c
[2020-12-01 10:49:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@37cab92b: (connection has passed maxLifetime)
[2020-12-01 10:49:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15171b86
[2020-12-01 10:49:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:50:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:50:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:51:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:51:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:52:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:52:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:53:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:53:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:54:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:54:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:55:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:55:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:56:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:56:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:57:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 10:59:57] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 11:00:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 11:12:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 11:13:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 11:45:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 11:45:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 12:19:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 12:19:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 12:49:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 12:49:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 12:50:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:21:18] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:21:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:25:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:26:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:26:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:27:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:27:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:28:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:28:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:29:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:29:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:30:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:30:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:31:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:31:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:32:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:32:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:33:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:33:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:34:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:34:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:35:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:35:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:36:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:36:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:37:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:37:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:38:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:38:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:39:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:39:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:39:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@364f7f73: (connection has passed maxLifetime)
[2020-12-01 13:39:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e01d43f
[2020-12-01 13:39:57] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1329f367: (connection has passed maxLifetime)
[2020-12-01 13:39:57] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45c3d5cf
[2020-12-01 13:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@42f43663: (connection has passed maxLifetime)
[2020-12-01 13:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@318bf580
[2020-12-01 13:40:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:40:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@75e4f39: (connection has passed maxLifetime)
[2020-12-01 13:40:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1feef9d
[2020-12-01 13:40:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@55587155: (connection has passed maxLifetime)
[2020-12-01 13:40:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75f2a64a
[2020-12-01 13:40:20] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1f5eef90: (connection has passed maxLifetime)
[2020-12-01 13:40:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a7dae2f
[2020-12-01 13:40:29] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2180502e: (connection has passed maxLifetime)
[2020-12-01 13:40:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@568c23df
[2020-12-01 13:40:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:40:34] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6c9010fc: (connection has passed maxLifetime)
[2020-12-01 13:40:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22d75548
[2020-12-01 13:40:46] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@44e1942c: (connection has passed maxLifetime)
[2020-12-01 13:40:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c4300af
[2020-12-01 13:40:56] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@15171b86: (connection has passed maxLifetime)
[2020-12-01 13:40:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@149fb997
[2020-12-01 13:41:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:41:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:42:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:42:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:43:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:43:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:44:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:44:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:45:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:45:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:46:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:46:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:47:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:47:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:48:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:48:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:49:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:49:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:50:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:50:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:51:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:51:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:52:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:52:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:53:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:53:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:54:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:54:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:55:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:55:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:56:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:56:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:57:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:57:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:58:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:58:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:59:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 13:59:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:00:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:00:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:01:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:01:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:02:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:02:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:03:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:03:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:04:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:04:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:05:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:05:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:06:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:06:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:07:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:07:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:08:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:08:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:09:30] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1e01d43f: (connection has passed maxLifetime)
[2020-12-01 14:09:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e355cb9
[2020-12-01 14:09:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:09:34] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@45c3d5cf: (connection has passed maxLifetime)
[2020-12-01 14:09:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a966ce7
[2020-12-01 14:09:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@75f2a64a: (connection has passed maxLifetime)
[2020-12-01 14:09:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12671f98
[2020-12-01 14:09:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@318bf580: (connection has passed maxLifetime)
[2020-12-01 14:09:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7fc11c7a
[2020-12-01 14:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@22d75548: (connection has passed maxLifetime)
[2020-12-01 14:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b3393be
[2020-12-01 14:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@568c23df: (connection has passed maxLifetime)
[2020-12-01 14:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f11c5c3
[2020-12-01 14:10:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:10:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1feef9d: (connection has passed maxLifetime)
[2020-12-01 14:10:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3a0b8a4a
[2020-12-01 14:10:08] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4a7dae2f: (connection has passed maxLifetime)
[2020-12-01 14:10:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ebc8a63
[2020-12-01 14:10:17] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7c4300af: (connection has passed maxLifetime)
[2020-12-01 14:10:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@362aede5
[2020-12-01 14:10:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:10:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@149fb997: (connection has passed maxLifetime)
[2020-12-01 14:10:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c114171
[2020-12-01 14:11:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:11:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:12:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:12:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:13:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:13:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:14:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:14:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:15:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:15:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:16:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:16:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:17:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:17:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:18:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:18:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:19:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:19:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:20:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:20:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:21:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:21:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:22:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:22:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:23:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:23:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:24:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:24:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:25:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:25:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:26:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:26:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:27:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:27:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:28:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:28:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:29:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:29:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:30:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:30:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:31:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:31:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:32:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:32:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:33:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:33:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:34:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:34:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:35:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:35:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:36:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:36:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:37:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:37:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:38:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:38:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:39:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:39:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e355cb9: (connection has passed maxLifetime)
[2020-12-01 14:39:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b1e2113
[2020-12-01 14:39:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7fc11c7a: (connection has passed maxLifetime)
[2020-12-01 14:39:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4231a3b1
[2020-12-01 14:39:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3f11c5c3: (connection has passed maxLifetime)
[2020-12-01 14:39:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@637866f
[2020-12-01 14:39:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@b3393be: (connection has passed maxLifetime)
[2020-12-01 14:39:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@72bc99e9
[2020-12-01 14:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5a966ce7: (connection has passed maxLifetime)
[2020-12-01 14:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1ed32dfa
[2020-12-01 14:39:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:39:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@12671f98: (connection has passed maxLifetime)
[2020-12-01 14:39:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d0d8388
[2020-12-01 14:39:54] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3a0b8a4a: (connection has passed maxLifetime)
[2020-12-01 14:39:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3846f049
[2020-12-01 14:39:58] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@362aede5: (connection has passed maxLifetime)
[2020-12-01 14:39:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cf3b716
[2020-12-01 14:40:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:40:04] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4ebc8a63: (connection has passed maxLifetime)
[2020-12-01 14:40:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@76900c1b
[2020-12-01 14:40:30] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@c114171: (connection has passed maxLifetime)
[2020-12-01 14:40:30] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52c5b23b
[2020-12-01 14:40:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:41:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:41:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:42:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:42:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:43:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:43:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:44:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:44:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:45:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:45:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:46:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:46:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:47:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:47:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:48:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:48:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:49:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:49:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:50:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:50:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:51:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:51:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:52:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:52:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:53:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:53:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:54:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:54:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:55:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:55:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:56:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:56:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:57:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:57:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:58:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:58:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:59:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 14:59:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:00:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:00:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:01:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:01:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:02:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:02:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:03:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:03:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:04:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:04:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:05:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:05:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:06:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:06:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:07:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:07:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:08:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:08:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:08:41] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2b1e2113: (connection has passed maxLifetime)
[2020-12-01 15:08:41] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19224fa7
[2020-12-01 15:08:44] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@637866f: (connection has passed maxLifetime)
[2020-12-01 15:08:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d36d90f
[2020-12-01 15:08:45] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4231a3b1: (connection has passed maxLifetime)
[2020-12-01 15:08:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@573314e8
[2020-12-01 15:08:58] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1ed32dfa: (connection has passed maxLifetime)
[2020-12-01 15:08:58] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f9a512c
[2020-12-01 15:09:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@72bc99e9: (connection has passed maxLifetime)
[2020-12-01 15:09:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b28d5ed
[2020-12-01 15:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:09:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3846f049: (connection has passed maxLifetime)
[2020-12-01 15:09:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3440f909
[2020-12-01 15:09:22] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4cf3b716: (connection has passed maxLifetime)
[2020-12-01 15:09:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7cd90ce2
[2020-12-01 15:09:22] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d0d8388: (connection has passed maxLifetime)
[2020-12-01 15:09:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8288055
[2020-12-01 15:09:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:10:03] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@76900c1b: (connection has passed maxLifetime)
[2020-12-01 15:10:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34faeb76
[2020-12-01 15:10:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:10:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@52c5b23b: (connection has passed maxLifetime)
[2020-12-01 15:10:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4054feec
[2020-12-01 15:10:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:11:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:11:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:12:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:12:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:13:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:13:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:14:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:14:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:15:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:15:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:16:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:16:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:17:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:17:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:18:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:18:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:19:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:19:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:20:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:20:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:21:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:21:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:22:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:22:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:23:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:23:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:24:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:24:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:25:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:25:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:26:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:26:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:27:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:27:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:28:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:28:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:29:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:29:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:30:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:30:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:31:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:31:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:32:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:32:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:33:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:33:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:34:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:34:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:35:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:35:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:36:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:36:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:37:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:37:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:38:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@19224fa7: (connection has passed maxLifetime)
[2020-12-01 15:38:11] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@67181c7b
[2020-12-01 15:38:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@573314e8: (connection has passed maxLifetime)
[2020-12-01 15:38:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@540aac9c
[2020-12-01 15:38:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3f9a512c: (connection has passed maxLifetime)
[2020-12-01 15:38:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d1040c4
[2020-12-01 15:38:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3440f909: (connection has passed maxLifetime)
[2020-12-01 15:38:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9e00cc7
[2020-12-01 15:38:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:38:35] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d36d90f: (connection has passed maxLifetime)
[2020-12-01 15:38:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d2cfca1
[2020-12-01 15:38:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7cd90ce2: (connection has passed maxLifetime)
[2020-12-01 15:38:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@75999f95
[2020-12-01 15:38:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8288055: (connection has passed maxLifetime)
[2020-12-01 15:38:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@20292b9c
[2020-12-01 15:38:56] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4b28d5ed: (connection has passed maxLifetime)
[2020-12-01 15:38:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b281467
[2020-12-01 15:39:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:39:22] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@34faeb76: (connection has passed maxLifetime)
[2020-12-01 15:39:22] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d77cd2e
[2020-12-01 15:39:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:40:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:40:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4054feec: (connection has passed maxLifetime)
[2020-12-01 15:40:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d1f622d
[2020-12-01 15:40:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:41:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:41:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:42:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:42:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:43:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:43:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:44:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:44:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:45:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:45:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:46:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:46:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:47:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:47:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:48:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:48:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:49:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:49:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:50:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:50:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:51:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:51:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:52:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:52:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:53:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:53:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:54:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:54:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:55:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:55:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:56:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:56:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:57:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:57:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:58:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:58:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:59:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 15:59:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:00:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:00:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:01:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:01:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:02:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:02:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:03:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:03:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:04:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:04:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:05:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:05:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:06:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:06:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:07:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:07:31] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@540aac9c: (connection has passed maxLifetime)
[2020-12-01 16:07:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8d1af6d
[2020-12-01 16:07:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:07:38] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@67181c7b: (connection has passed maxLifetime)
[2020-12-01 16:07:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ab8bc71
[2020-12-01 16:07:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d2cfca1: (connection has passed maxLifetime)
[2020-12-01 16:07:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48594513
[2020-12-01 16:08:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9e00cc7: (connection has passed maxLifetime)
[2020-12-01 16:08:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c1cebfd
[2020-12-01 16:08:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:08:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@75999f95: (connection has passed maxLifetime)
[2020-12-01 16:08:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a7d0f86
[2020-12-01 16:08:08] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d1040c4: (connection has passed maxLifetime)
[2020-12-01 16:08:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e7acf42
[2020-12-01 16:08:14] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1b281467: (connection has passed maxLifetime)
[2020-12-01 16:08:14] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4591b7d9
[2020-12-01 16:08:17] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@20292b9c: (connection has passed maxLifetime)
[2020-12-01 16:08:17] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@315945bc
[2020-12-01 16:08:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:09:11] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1d77cd2e: (connection has passed maxLifetime)
[2020-12-01 16:09:12] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d8aa060
[2020-12-01 16:09:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d1f622d: (connection has passed maxLifetime)
[2020-12-01 16:09:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17064ac2
[2020-12-01 16:10:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:10:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:11:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:11:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:12:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:12:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:13:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:13:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:14:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:14:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:15:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:15:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:16:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:16:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:17:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:17:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:18:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:18:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:19:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:19:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:20:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:20:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:21:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:21:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:22:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:22:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:23:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:23:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:24:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:24:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:25:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:25:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:26:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:26:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:27:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:27:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:28:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:28:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:29:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:29:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:30:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:30:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:31:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:31:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:32:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:32:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:33:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:33:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:34:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:34:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:35:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:35:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:36:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:36:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:36:54] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2ab8bc71: (connection has passed maxLifetime)
[2020-12-01 16:36:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@78500896
[2020-12-01 16:36:56] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@8d1af6d: (connection has passed maxLifetime)
[2020-12-01 16:36:56] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ca50135
[2020-12-01 16:37:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:37:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:37:43] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@48594513: (connection has passed maxLifetime)
[2020-12-01 16:37:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71121c33
[2020-12-01 16:37:44] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3c1cebfd: (connection has passed maxLifetime)
[2020-12-01 16:37:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56ecfee
[2020-12-01 16:37:46] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@a7d0f86: (connection has passed maxLifetime)
[2020-12-01 16:37:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d20c21b
[2020-12-01 16:37:48] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@315945bc: (connection has passed maxLifetime)
[2020-12-01 16:37:48] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5071dbac
[2020-12-01 16:37:49] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7e7acf42: (connection has passed maxLifetime)
[2020-12-01 16:37:49] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@bc13123
[2020-12-01 16:38:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:38:10] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4591b7d9: (connection has passed maxLifetime)
[2020-12-01 16:38:10] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37f32c30
[2020-12-01 16:38:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:38:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d8aa060: (connection has passed maxLifetime)
[2020-12-01 16:38:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15f0367b
[2020-12-01 16:39:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:39:25] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@17064ac2: (connection has passed maxLifetime)
[2020-12-01 16:39:25] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e7f8263
[2020-12-01 16:39:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:40:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:40:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:41:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:41:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:42:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:42:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:43:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:43:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:44:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:44:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:45:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:45:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:46:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:46:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:47:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:47:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:48:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:48:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:49:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:49:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:50:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:50:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:51:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:51:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:52:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:52:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:53:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:53:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:54:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:54:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:55:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:55:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:56:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:56:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:57:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:57:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:58:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:58:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:59:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 16:59:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:00:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:00:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:01:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:01:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:02:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:02:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:03:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:03:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:04:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:04:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:05:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:05:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:06:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:06:13] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@78500896: (connection has passed maxLifetime)
[2020-12-01 17:06:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19432c64
[2020-12-01 17:06:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:06:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@ca50135: (connection has passed maxLifetime)
[2020-12-01 17:06:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@fa509c2
[2020-12-01 17:07:02] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@d20c21b: (connection has passed maxLifetime)
[2020-12-01 17:07:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3dc60a68
[2020-12-01 17:07:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:07:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@bc13123: (connection has passed maxLifetime)
[2020-12-01 17:07:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c9bb33c
[2020-12-01 17:07:20] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56ecfee: (connection has passed maxLifetime)
[2020-12-01 17:07:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@680a117e
[2020-12-01 17:07:29] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@71121c33: (connection has passed maxLifetime)
[2020-12-01 17:07:29] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56073448
[2020-12-01 17:07:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:07:39] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5071dbac: (connection has passed maxLifetime)
[2020-12-01 17:07:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1fd52671
[2020-12-01 17:08:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:08:08] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@37f32c30: (connection has passed maxLifetime)
[2020-12-01 17:08:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46f42920
[2020-12-01 17:08:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:08:40] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@15f0367b: (connection has passed maxLifetime)
[2020-12-01 17:08:40] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@700da8a3
[2020-12-01 17:08:54] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6e7f8263: (connection has passed maxLifetime)
[2020-12-01 17:08:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5460613b
[2020-12-01 17:09:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:09:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:10:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:10:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:11:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:11:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:12:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:12:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:13:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:13:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:14:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:14:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:15:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:15:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:16:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:16:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:17:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:17:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:18:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:18:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:19:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:19:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:20:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:20:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:21:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:21:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:22:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:22:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:23:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:23:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:24:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:24:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:25:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:25:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:26:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:26:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:27:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:28:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:28:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:29:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:29:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:30:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:30:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:31:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:31:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:32:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:32:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:33:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:33:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:34:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:34:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:35:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:35:28] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@19432c64: (connection has passed maxLifetime)
[2020-12-01 17:35:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1042073
[2020-12-01 17:35:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:36:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:36:21] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3dc60a68: (connection has passed maxLifetime)
[2020-12-01 17:36:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2010e21a
[2020-12-01 17:36:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@fa509c2: (connection has passed maxLifetime)
[2020-12-01 17:36:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@54bdf81b
[2020-12-01 17:36:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:36:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56073448: (connection has passed maxLifetime)
[2020-12-01 17:36:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e4dc355
[2020-12-01 17:36:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@680a117e: (connection has passed maxLifetime)
[2020-12-01 17:36:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a7e11fb
[2020-12-01 17:37:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:37:05] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1c9bb33c: (connection has passed maxLifetime)
[2020-12-01 17:37:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1fd6acfc
[2020-12-01 17:37:15] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1fd52671: (connection has passed maxLifetime)
[2020-12-01 17:37:15] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@195f4a44
[2020-12-01 17:37:34] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@46f42920: (connection has passed maxLifetime)
[2020-12-01 17:37:34] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17757aa2
[2020-12-01 17:37:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:38:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:38:08] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@700da8a3: (connection has passed maxLifetime)
[2020-12-01 17:38:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f79b7a8
[2020-12-01 17:38:33] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5460613b: (connection has passed maxLifetime)
[2020-12-01 17:38:33] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@449057f5
[2020-12-01 17:38:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:39:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:39:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:40:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:40:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:41:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:41:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:42:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:42:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:43:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:43:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:44:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:44:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:45:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:45:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:46:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:46:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:47:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:47:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:48:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:48:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:49:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:49:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:50:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:50:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:51:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:51:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:52:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:52:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:53:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:53:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:54:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:54:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:55:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:55:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:56:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:56:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:57:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:57:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:58:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:58:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:59:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 17:59:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:00:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:00:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:01:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:01:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:02:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:02:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:03:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:03:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:04:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:04:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:04:52] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1042073: (connection has passed maxLifetime)
[2020-12-01 18:04:52] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c966cfd
[2020-12-01 18:05:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:05:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:06:03] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@54bdf81b: (connection has passed maxLifetime)
[2020-12-01 18:06:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b5d1cf1
[2020-12-01 18:06:05] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2010e21a: (connection has passed maxLifetime)
[2020-12-01 18:06:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7fdb6d22
[2020-12-01 18:06:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:06:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:06:44] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4a7e11fb: (connection has passed maxLifetime)
[2020-12-01 18:06:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45730ebe
[2020-12-01 18:06:44] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@195f4a44: (connection has passed maxLifetime)
[2020-12-01 18:06:44] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@313b8e9c
[2020-12-01 18:06:45] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3e4dc355: (connection has passed maxLifetime)
[2020-12-01 18:06:45] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@754edea1
[2020-12-01 18:07:03] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1fd6acfc: (connection has passed maxLifetime)
[2020-12-01 18:07:03] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@be8db97
[2020-12-01 18:07:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:07:28] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@17757aa2: (connection has passed maxLifetime)
[2020-12-01 18:07:28] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24fb2d83
[2020-12-01 18:07:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:08:05] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5f79b7a8: (connection has passed maxLifetime)
[2020-12-01 18:08:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13ee0d5c
[2020-12-01 18:08:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:08:19] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@449057f5: (connection has passed maxLifetime)
[2020-12-01 18:08:19] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@475c8315
[2020-12-01 18:08:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:09:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:09:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:10:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:10:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:11:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:11:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:12:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:12:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:13:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:13:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:14:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:14:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:15:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:15:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:16:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2020-12-01 18:16:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
